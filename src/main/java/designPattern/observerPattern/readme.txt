观察者模式：
定义对象间的一对多的依赖关系，当一个对象状态发生改变时，所有依赖它的对象都得到通知并且自动更新。
应用场景：
当一个对象的数据更新时，需要通知其他对象，而又不希望和被通知的对象形成紧耦合时。

在本案例中提供抽象主题，具体主题，抽象观察者，具体观察者四个对象
①抽象主题 Topic：提供注册，注销，通知接口
②具体主题 ConcreteTopic：包含主题的状态，主题变更时调用父通知接口来通知对应的观察者对象
③抽象观察者接口 Observer：提供更新状态接口，用于被抽象主题的通知接口调用
④具体观察者对象 ConcreteObserver：当实现的update接口被调用时，需要通过传递的参数同时更新自己的属性

本案例提供两种模式：推模式(默认)和拉模式
①推模式：由主题方发起推送，推送内容不管观察者是否需要，通常是主题对象的全部或部分数据。
②拉模式：通知接口不需要传递参数，在观察者的更新接口中，直接将主题本身传递给观察者对象，观察者根据自己的实际需要来选择更新自己的属性。




