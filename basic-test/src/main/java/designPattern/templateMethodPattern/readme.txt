模板方法模式(Template Method Pattern)：
定义一个操作中算法的骨架，将一些步骤延迟到子类中。模板方法使子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤
应用场景：
①设计者需要给出一个算法的固定步骤，并将某些步骤的具体实现留给子类来实现(比如消息队列中的消费者注册)
②需要对代码进行重构，将各个子类公共行为提取出来集中到一个共同的父类中以避免代码重复。
优点：
①可以通过在抽象类中定义模板方法给出成熟的算法步骤，同时又不限制步骤的细节，具体模板实现细节不会改变整个算法的骨架。
②抽象模板中，可以通过钩子方法对某些步骤进行挂钩，具体模板通过钩子可以选择算法骨架中的某些步骤。

本案例以生活中菜谱为案例：
①炒时蔬
②炒瘦肉

炒菜过程中，我们需要加油，热油，下菜，翻炒，下佐料，起锅
这个过程中，整体骨架(执行顺序)是一致的，区别在于部分步骤的细节不一致
通过定义一个模板抽象方法，定义骨架方法(使用final修饰)，具体步骤中如果是固定的，则直接在抽象类中编写具体的定义
如果是需要子类自己实现的方法，则定义为抽象类
PS:需要子类自己实现的方法都定义为protected

